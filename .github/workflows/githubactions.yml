name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        region: ['ap-south-1']  # Define your AWS region here

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ matrix.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: 'AWS'  # Use AWS registry type
          region: ${{ matrix.region }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_REPO_NAME=<ecr-dev>

          docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG

      - name: Deploy to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ matrix.region }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          REGION=${{ matrix.region }}
          CLUSTER_NAME=ecs-cluster-${{ matrix.region }}
          SERVICE_NAME=ecs-service-${{ matrix.region }}
          IMAGE_URI=$ECR_REGISTRY/<ecr-dev>:$IMAGE_TAG

          # Update the ECS service with the new image
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment --region $REGION --desired-count 1

      - name: Verify deployment
        env:
          AWS_REGION: ${{ matrix.region }}
        run: |
          sleep 60
          SERVICE_URL=$(aws ecs describe-services --cluster ecs-cluster-${{ matrix.region }} --services ecs-service-${{ matrix.region }} --region ${{ matrix.region }} --query "services[0].loadBalancers[0].loadBalancerName" --output text)
          curl http://$SERVICE_URL/db-connect
